#!/bin/sh

platform=`uname`

command -v stow >/dev/null 2>&1 || { echo >&2 "GNU stow is not installed.  Aborting."; exit 1; }
if [ "$platform" = "Darwin" ]; then
  command -v brew >/dev/null 2>&1 || { echo >&2 "brew is not installed.  Aborting."; exit 1; }
  command -v gfind >/dev/null 2>&1 || { echo >&2 "brew findutils is not installed.  Aborting."; exit 1; }
  alias find='gfind'
fi

add()
{
  package=$1
  config=$2
  PACKAGE_ROOT=~/dotfiles/$package
  CONFIG_ROOT=$config
  DOTFILES_PACKAGE_CONFIG_ROOT=${CONFIG_ROOT#~/}
  PACKAGE_CONFIGURATION_ROOT=$PACKAGE_ROOT/$DOTFILES_PACKAGE_CONFIG_ROOT
  mkdir -p $(dirname $PACKAGE_CONFIGURATION_ROOT)
  mv $config $(dirname $PACKAGE_CONFIGURATION_ROOT)
}

link()
{
  stow $1 -d ~/dotfiles
}

updateSubmodules()
{
  (cd ~/dotfiles && git submodule init && git submodule update)
}

linkAll()
{
  find ~/dotfiles -maxdepth 1 -mindepth 1 -type d -printf '%f\n' |\
    grep -E -v '^\..*$' |\
    xargs -I {} stow {} -d ~/dotfiles
}

args=`getopt la: $*`
if [ $# -eq 0 ]; then
  echo "Usage: ..."
  echo "-l"
  echo "--link"
  echo "    symlink all dotfiles"
  echo "-a"
  echo "--add"
  echo "    store a configuration in the dotfiles folder and symlink it back to its original location"
  exit 2
fi

if [ ! -d ~/dotfiles ]; then
  git clone git@github.com:pklingem/dotfiles ~/dotfiles
fi

set -- $args

for i
do
  case "$i"
  in
    -l|--link)
      updateSubmodules
      linkAll

      shift;;
    -a|--add)
      package="$2"; shift; config="$3"; shift;

      add $package $config
      link $package

      shift;;
    --)
      shift; break;;
  esac
done
